---
name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ master ]
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: [self-hosted, local] #running on my local machine.
    env:
      IMAGE_NAME: pipe-01
      PROJECT_ID: zekrome-data
      REGION: us-central1
      REPOSITORY: autopilot
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    - name: Generate Version Tag
      id: version
      run: |
        git fetch --tags
        latest=$(git tag --sort=-v:refname | grep '^v[0-9]*$' | head -n 1)
        if [ -z "$latest" ]; then
          echo "tag=v1" >> $GITHUB_OUTPUT
        else
          num=$(echo $latest | cut -c2-)
          next=v$((num + 1))
          echo "tag=$next" >> $GITHUB_OUTPUT
        fi
      # with:
      #   service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
      #   project_id: ${{ env.PROJECT_ID }} -
      #   export_default_credentials: true
        

    - name: Build Docker Image
      run: docker build -f Dockerfile.dev -t $IMAGE_NAME:latest .

    # - name: Automatic Tagging of Releases
    #   id: increment-git-tag
    #   run: |
    #     bash ./scripts/git_update.sh -v major

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

    # - name: Push Docker Image to Container Registry (GCR)
    #   env:
    #     GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
    #   run: |-
    #     docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
    #     docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
    #     docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
    #     docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

    - name: Push Docker Image to Artifact Registry
      # env:
      #   GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        VERSION_TAG=${{ steps.version.outputs.tag }}
        IMAGE_PATH=$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME

        docker tag $IMAGE_NAME:latest $IMAGE_PATH:latest
        docker tag $IMAGE_NAME:latest $IMAGE_PATH:$VERSION_TAG

        docker push $IMAGE_PATH:latest
        docker push $IMAGE_PATH:$VERSION_TAG
        # docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/autopilot/$IMAGE_NAME:latest
        # docker push us-central1-docker.pkg.dev/$PROJECT_ID/autopilot/$IMAGE_NAME:latest
       # docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
       # docker push us-central1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
       # docker push us-central1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
